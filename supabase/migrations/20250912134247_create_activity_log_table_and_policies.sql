create table public.activity_log (
  id bigint generated by default as identity not null,
  user_id uuid null,
  action_type text not null,
  details text null,
  metadata jsonb null,
  ip_address character varying(45) null,
  user_agent text null,
  is_sensitive boolean null default false,
  severity_level text null default 'info'::text,
  geo_location jsonb null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint activity_log_pkey primary key (id),
  constraint activity_log_user_id_fkey foreign KEY (user_id) references profiles (id) on delete set null
) TABLESPACE pg_default;

create index IF not exists idx_activity_log_user_created on public.activity_log using btree (user_id, created_at desc) TABLESPACE pg_default;

create index IF not exists idx_activity_log_action_type on public.activity_log using btree (action_type) TABLESPACE pg_default;

-- Enable Row Level Security (RLS)
ALTER TABLE public.activity_log ENABLE ROW LEVEL SECURITY;

-- Policy 1: Admins can view all activity logs.
CREATE POLICY "Admins can view all activity logs."
ON public.activity_log
FOR SELECT
TO authenticated
USING (
  EXISTS (
    SELECT 1
    FROM public.profiles
    WHERE public.profiles.id = auth.uid() AND public.profiles.role = 'admin'
  )
);

-- Policy 2: Authenticated users can insert their own activity logs.
CREATE POLICY "Authenticated users can insert their own activity logs."
ON public.activity_log
FOR INSERT
TO authenticated
WITH CHECK (auth.uid() = user_id);
